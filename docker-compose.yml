version: "3.3"

networks:
  web-app:

services:
  frontend-dev:
    container_name: frontend-react
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend/react-app:/app
    ports:
      - "8025:8025"
    restart: unless-stopped
    networks:
      - web-app

  backend-dev:
    container_name: backend-laravel
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./backend/laravel-app:/var/www/html:delegated
    restart: unless-stopped
    networks:
      - web-app

  web-server:
    container_name: webserver-nginx
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "8084:80"
    volumes:
      - ./backend/laravel-app:/var/www/html:delegated
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend-dev
      - mysql_db
    restart: unless-stopped
    networks:
      - web-app

  mysql_db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: web-app
    ports:
      - 3006:3006
    restart: unless-stopped
    volumes:
      - ./data/mysql:/var/lib/mysql   
    networks:
      - web-app

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - 9001:80
    environment:
      - PMA_ARBITRARY=1
    restart: unless-stopped
    networks:
      - web-app